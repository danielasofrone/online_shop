{"version":3,"sources":["assets/icons/heart.svg","assets/icons/leftArow.svg","assets/icons/corner.svg","store/actions/index.js","store/constants/actionTypes.js","shared/utils.js","components/ProductCard/productCard.styled.js","components/ProductCard/ProductCard.js","components/ProductList/productList.styled.js","components/ProductList/ProductList.js","store/reducers/shoppingCart.js","store/reducers/index.js","components/SlideShoppingCart/CartProductCard/cartProductCard.styled.js","components/SlideShoppingCart/CartProductCard/CartProductCard.js","components/Button/button.styled.js","components/Button/Button.js","components/SlideShoppingCart/slideShoppingCart.styled.js","components/SlideShoppingCart/SlideShoppingCart.js","components/Header/header.styled.js","components/Header/Header.js","components/Layout/layout.styled.js","components/Layout/Layout.js","index.js"],"names":["module","exports","updateCart","product","type","payload","checkQuantity","shoppingCart","quantity","newProduct","productExists","filter","productData","id","length","updateShoppingCart","newShoppingCart","findIndex","productInCart","Card","styled","div","ProductImage","CardContent","TextContainer","PriceTag","CardFooter","AddButton","FavoritesButton","Icon","img","connect","dispatch","addProductToCart","addToCart","updateProductInCart","src","image","alt","title","price","favorite","heart","onClick","updatedProduct","handleAddProduct","ProductList","products","map","key","defaultProps","productsData","initialState","state","action","rootReducer","combineReducers","ProductCard","ProductTitle","ProductPrice","ProductQuantity","ChangeQuantityButton","button","RemoveProduct","removeProductFromCart","removeFromCart","handleUpdateQuantity","Button","isSmall","children","ProductsContainer","ProductsSubcontainer","BackButtonContainer","ItemsContainer","BackButtonText","BottomContainer","TotalPriceContainer","TotalPriceText","TotalPriceNumber","CheckoutButtonContainer","IfCartEmpty","closeCart","leftArow","currentAmount","toFixed","showTotalAmount","Header","header","LogoContainer","LogoText","Logo","LogoIcon","ItemsCountBubble","ShoppingCartButton","useState","openSlideCart","setOpenSlideCart","corner","x","y","width","height","viewBox","d","calculateCartProductQuantity","MainWrapper","ContentWrapper","Layout","WebFont","load","google","families","store","createStore","reducer","appRoot","ReactDOM","render","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,mC,ixTCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,uLCO9BC,EAAa,SAAAC,GAAO,MAAK,CACpCC,KCJyB,cDKzBC,QAASF,I,uBEAEG,EAAgB,SAACH,EAASI,EAAcH,GACnD,IAKoBI,EALhBC,EAAU,2BACTN,GADS,IAEZK,SAAU,IAONE,EAAgBH,EAAaI,QACjC,SAAAC,GAAW,OAAIA,EAAYC,KAAOV,EAAQU,MAU5C,OAPIH,EAAcI,SAChBL,EAAU,2BACLN,GADK,IAERK,UAXgBA,EAWME,EAAc,GAAGF,SAVzB,WAATJ,EAAoBI,EAAW,EAAIA,EAAW,MAchDC,GAGIM,EAAqB,SAACZ,EAASI,GAC1C,IAAMS,EAAe,YAAOT,GAK5B,OADAS,EAHqBT,EAAaU,WAChC,SAAAC,GAAa,OAAIA,EAAcL,KAAOV,EAAQU,OAElBL,SAAWL,EAAQK,SAC1CQ,G,+BCrCIG,EAAOC,IAAOC,IAAV,iQAYJC,EAAeF,IAAOC,IAAV,wNAcZE,EAAcH,IAAOC,IAAV,wIAQXG,EAAgBJ,IAAOC,IAAV,oIAObI,EAAWL,IAAOC,IAAV,+IAQRK,EAAaN,IAAOC,IAAV,+FAOVM,EAAYP,IAAOC,IAAV,0SAeTO,EAAkBR,IAAOC,IAAV,oPAafQ,EAAOT,IAAOU,IAAV,sLCzBFC,eATS,SAAC,GAAD,MAAqB,CAC3CxB,aADsB,EAAEA,iBAIC,SAAAyB,GAAQ,MAAK,CACtCC,iBAAkB,SAAA9B,GAAO,OAAI6B,EJvDN,SAAA7B,GAAO,MAAK,CACnCC,KCHyB,cDIzBC,QAASF,GIqD6B+B,CAAU/B,KAChDgC,oBAAqB,SAAAhC,GAAO,OAAI6B,EAAS9B,EAAWC,QAGvC4B,EArDK,SAAC,GAKd,IAJLE,EAII,EAJJA,iBACAE,EAGI,EAHJA,oBACAhC,EAEI,EAFJA,QACAI,EACI,EADJA,aAWA,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,yBAAK6B,IAAKjC,EAAQkC,MAAOC,IAAI,MAE/B,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAkBnC,EAAQoC,OAC1B,kBAAC,EAAD,eACK,GADL,IACUpC,EAAQqC,QAGpB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAmBC,UAAQ,GACzB,kBAAC,EAAD,CAAQL,IAAKM,OAEf,kBAAC,EAAD,CAAaC,QAAS,kBAxBH,WACvB,IAAMC,EAAiBtC,EAAcH,EAASI,GAC1CqC,EAAepC,SAAW,EAC5B2B,EAAoBS,GAEpBX,EAAiBW,GAmBaC,KAA5B,oB,QCpCKC,EAAc1B,IAAOC,IAAV,+JCIlByB,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACE,kBAAC,EAAD,KACGA,EAASC,KAAI,SAAA7C,GAAO,OACnB,kBAAC,EAAD,CAAa8C,IAAK9C,EAAQU,GAAIV,QAASA,SAM/C2C,EAAYI,aAAe,CACzBH,SAAUI,GAOGL,I,gBAAAA,ICjBTM,EAAe,GAkBN7C,GAhBM,WAAmC,IAAlC8C,EAAiC,uDAAzBD,EAAcE,EAAW,uCACrD,OAAQA,EAAOlD,MACb,INXuB,cMYrB,MAAM,GAAN,mBAAWiD,GAAX,gBAAsBC,EAAOjD,WAE/B,INVuB,cMWrB,OAAOU,EAAmBuC,EAAOjD,QAASgD,GAG5C,INhB4B,mBMiB1B,OAAOA,EAAM1C,QAAO,SAAAR,GAAO,OAAIA,EAAQU,KAAOyC,EAAOzC,MACvD,QACE,OAAOwC,ICdEE,GAJKC,YAAgB,CAClCjD,kB,SCFWkD,GAAcrC,IAAOC,IAAV,uLAUXC,GAAeF,IAAOC,IAAV,0NAcZqC,GAAetC,IAAOC,IAAV,0NAUZsC,GAAevC,IAAOC,IAAV,8GAOZuC,GAAkBxC,IAAOC,IAAV,0HAQfwC,GAAuBzC,IAAO0C,OAAV,wEAKpBC,GAAgB3C,IAAOC,IAAV,gNCUXU,gBATS,SAAC,GAAD,MAAqB,CAC3CxB,aADsB,EAAEA,iBAIC,SAAAyB,GAAQ,MAAK,CACtCgC,sBAAuB,SAAAnD,GAAE,OAAImB,EVlDD,SAAAnB,GAAE,MAAK,CACnCT,KCX8B,mBDY9BS,MUgDsCoD,CAAepD,KACrDsB,oBAAqB,SAAAhC,GAAO,OAAI6B,EAAS9B,EAAWC,QAGvC4B,EAzDS,SAAC,GAMlB,IALLiC,EAKI,EALJA,sBACA7D,EAII,EAJJA,QACAK,EAGI,EAHJA,SACAD,EAEI,EAFJA,aACA4B,EACI,EADJA,oBAEM+B,EAAuB,SAAA9D,GAC3B,GAAa,WAATA,GAAkC,IAAbI,EAAzB,CAIA,IAAMoC,EAAiBtC,EAAcH,EAASI,EAAcH,GAC5D+B,EAAoBS,QAJlBoB,EAAsB7D,EAAQU,KAOlC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,yBAAKuB,IAAKjC,EAAQkC,MAAOC,IAAI,MAE/B,kBAAC,GAAD,KAAiBnC,EAAQoC,OACzB,kBAAC,GAAD,eAAmBpC,EAAQqC,OAC3B,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAwBG,QAAS,kBAAMuB,EAAqB,YAA5D,KAGC,GAJH,IAIQ1D,EACL,GAAI,IACL,kBAAC,GAAD,CAAwBmC,QAAS,kBAAMuB,MAAvC,MAIF,kBAAC,GAAD,CAAiBvB,QAAS,kBAAMqB,EAAsB7D,EAAQU,MAA9D,c,oBCxCOsD,GAAS/C,IAAOC,IAAV,4XACJ,qBAAE+C,QAAwB,QAAU,WACpC,qBAAEA,QAAwB,QAAU,WCA7CD,GAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,SAAX,OACb,kBAAC,GAAD,CAAUD,QAASA,GAAUC,IAG/BF,GAAOjB,aAAe,CACpBkB,SAAS,GAQID,I,4DAAAA,MCfFG,GAAoBlD,IAAOC,IAAV,kNAcjBkD,GAAuBnD,IAAOC,IAAV,4GAOpBmD,GAAsBpD,IAAOC,IAAV,6SAiBnBoD,GAAiBrD,IAAOC,IAAV,qFAUdqD,IALatD,IAAOC,IAAV,+EAKOD,IAAOC,IAAV,wJAQdQ,GAAOT,IAAOU,IAAV,yFAMJ6C,GAAkBvD,IAAOC,IAAV,4OAafuD,GAAsBxD,IAAOC,IAAV,2GAMnBwD,GAAiBzD,IAAOC,IAAV,oMAUdyD,GAAmB1D,IAAOC,IAAV,qMAUhB0D,GAA0B3D,IAAOC,IAAV,2DAIvB2D,GAAc5D,IAAOC,IAAV,8JCrDTU,gBAJS,SAAC,GAAD,MAAqB,CAC3CxB,aADsB,EAAEA,gBAIXwB,EA7CW,SAAC,GAA+B,IAA9BxB,EAA6B,EAA7BA,aAAc0E,EAAe,EAAfA,UACxC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAuBtC,QAASsC,GAC9B,kBAAC,GAAD,CAAQ7C,IAAK8C,OACb,kBAAC,GAAD,2BAEF,kBAAC,GAAD,KAC2B,IAAxB3E,EAAaO,OACZ,kBAAC,GAAD,sCAEAP,EAAayC,KAAI,SAAA7C,GAAO,OACtB,kBAAC,GAAD,CACE8C,IAAK9C,EAAQU,GACbV,QAASA,EACTK,SAAUL,EAAQK,eAK1B,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,kBACA,kBAAC,GAAD,KACE,gCZlCiB,SAAAuC,GAC7B,IADyC,EACrCoC,EAAgB,EADqB,cAGnBpC,GAHmB,IAGzC,2BAAgC,CAAC,IAAtB5C,EAAqB,QAC9BgF,GAAiBhF,EAAQK,SAAWL,EAAQqC,OAJL,8BAMzC,OAAO2C,EAAcC,QAAQ,GY4BRC,CAAgB9E,MAG7B,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQ6D,SAAO,GAAf,oB,oBCpCCkB,GAASlE,IAAOmE,OAAV,sJAUNC,GAAgBpE,IAAOC,IAAV,0JASboE,GAAWrE,IAAOC,IAAV,wJASRqE,GAAOtE,IAAOC,IAAV,mDAIJsE,GAAWvE,IAAOU,IAAV,uFAMR8D,GAAmBxE,IAAOmE,OAAV,kXAkBhBM,GAAqBzE,IAAOC,IAAV,+mBA2BzBuE,IC7EAN,GAAS,SAAC,GAAoB,IAAnB/E,EAAkB,EAAlBA,aAAkB,EACSuF,oBAAS,GADlB,oBAC1BC,EAD0B,KACXC,EADW,KAWjC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY5D,IAAK6D,QAEnB,kBAAC,GAAD,KACE,kDAGHF,GAAiB,kBAAC,GAAD,CAAmBd,UAlBjB,WACtBe,GAAiB,MAkBf,kBAAC,GAAD,CAAsBrD,QAfH,WACrBqD,GAAiB,KAeb,yBACEE,EAAE,MACFC,EAAE,MACFC,MAAM,YACNC,OAAO,YACPC,QAAQ,uBAER,2BACE,0BACEC,EAAE,owCAeR,kBAAC,GAAD,KdboC,SAAAhG,GAC1C,IAD0D,EACtDC,EAAW,EAD2C,cAGpCD,GAHoC,IAG1D,2BAAoC,CAClCC,GADkC,QACdA,UAJoC,8BAM1D,OAAOA,EcQEgG,CAA6BjG,OAOxC+E,GAAOpC,aAAe,CACpB3C,aAAc,GAOhB,I,SAIewB,gBAJS,SAAC,GAAD,MAAqB,CAC3CxB,aADsB,EAAEA,gBAIXwB,CAAyBuD,ICzE3BmB,GAAcrF,IAAOC,IAAV,6JASXqF,GAAiBtF,IAAOC,IAAV,2FCKZsF,IDCYvF,IAAOC,IAAV,6JCZT,SAAC,GAAD,IAAEgD,EAAF,EAAEA,SAAF,OACb,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KAAmBA,M,YCGvBuC,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,uDAIf,IAAMC,GAAQC,YAAYC,IAEpBC,GACJ,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,KACE,kBAAC,EAAD,QAKNI,IAASC,OAAOF,GAASG,SAASC,eAAe,W","file":"static/js/main.a40921a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.7746f5e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/leftArow.d648020d.svg\";","module.exports = __webpack_public_path__ + \"static/media/corner.57877daa.svg\";","import * as types from '../constants/actionTypes';\n\nexport const addToCart = product => ({\n  type: types.ADD_TO_CART,\n  payload: product,\n});\n\nexport const updateCart = product => ({\n  type: types.UPDATE_CART,\n  payload: product,\n});\n\nexport const removeFromCart = id => ({\n  type: types.REMOVE_FROM_CART,\n  id,\n});\n","export const ADD_TO_CART = 'ADD_TO_CART';\n\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n\nexport const UPDATE_CART = 'UPDATE_CART';\n","export const showTotalAmount = products => {\n  let currentAmount = 0;\n\n  for (const product of products) {\n    currentAmount += product.quantity * product.price;\n  }\n  return currentAmount.toFixed(2);\n};\n\nexport const checkQuantity = (product, shoppingCart, type) => {\n  let newProduct = {\n    ...product,\n    quantity: 1,\n  };\n\n  const addOrRemove = quantity => {\n    return type === 'remove' ? quantity - 1 : quantity + 1;\n  };\n\n  const productExists = shoppingCart.filter(\n    productData => productData.id === product.id\n  );\n\n  if (productExists.length) {\n    newProduct = {\n      ...product,\n      quantity: addOrRemove(productExists[0].quantity),\n    };\n  }\n\n  return newProduct;\n};\n\nexport const updateShoppingCart = (product, shoppingCart) => {\n  const newShoppingCart = [...shoppingCart];\n  const productIndex = shoppingCart.findIndex(\n    productInCart => productInCart.id === product.id\n  );\n  newShoppingCart[productIndex].quantity = product.quantity;\n  return newShoppingCart;\n};\n\nexport const calculateCartProductQuantity = shoppingCart => {\n  let quantity = 0;\n\n  for (const product of shoppingCart) {\n    quantity += product.quantity;\n  }\n  return quantity;\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  width: 100%;\n  float: left;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  &:hover {\n    box-shadow: 6px 6px 12px 0 rgb(0, 0, 0, 0.14);\n  }\n`;\n\nexport const ProductImage = styled.div`\n  width: 100%;\n  float: left;\n  height: 200px;\n  padding: 20px;\n  img {\n    width: 100%;\n    height: 100%;\n    float: left;\n    position: relative;\n    object-fit: contain;\n  }\n`;\n\nexport const CardContent = styled.div`\n  font-family: 'Open Sans', sans-serif;\n  width: 100%;\n  float: left;\n  padding: 15px;\n  flex-grow: 1;\n`;\n\nexport const TextContainer = styled.div`\n  font-family: 'PT Sans Narrow', sans-serif;\n  line-height: 25px;\n  font-size: 20px;\n  color: #333;\n`;\n\nexport const PriceTag = styled.div`\n  color: red;\n  float: left;\n  margin-top: 10px;\n  font-family: 'Open Sans', sans-serif;\n  font-weight: bold;\n`;\n\nexport const CardFooter = styled.div`\n  width: 100%;\n  float: left;\n  display: flex;\n  height: 60px;\n`;\n\nexport const AddButton = styled.div`\n  width: 100%;\n  flex: 3;\n  line-height: 60px;\n  text-align: center;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Open Sans', sans-serif;\n  border-top: 1px solid #d0d0d0;\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`;\n\nexport const FavoritesButton = styled.div`\n  border-top: 1px solid #d0d0d0;\n  border-right: 1px solid #d0d0d0;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  color: #333;\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`;\n\nexport const Icon = styled.img`\n  height: 40px;\n  width: 40px;\n  padding: 5px;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  margin: 10px 10px 10px 15px;\n`;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {addToCart, updateCart} from '../../store/actions/index';\nimport {checkQuantity} from '../../shared/utils';\nimport heart from '../../assets/icons/heart.svg';\nimport * as S from './productCard.styled';\n\nconst ProductCard = ({\n  addProductToCart,\n  updateProductInCart,\n  product,\n  shoppingCart,\n}) => {\n  const handleAddProduct = () => {\n    const updatedProduct = checkQuantity(product, shoppingCart);\n    if (updatedProduct.quantity > 1) {\n      updateProductInCart(updatedProduct);\n    } else {\n      addProductToCart(updatedProduct);\n    }\n  };\n\n  return (\n    <S.Card>\n      <S.ProductImage>\n        <img src={product.image} alt=\"\" />\n      </S.ProductImage>\n      <S.CardContent>\n        <S.TextContainer>{product.title}</S.TextContainer>\n        <S.PriceTag>\n          € {''} {product.price}\n        </S.PriceTag>\n      </S.CardContent>\n      <S.CardFooter>\n        <S.FavoritesButton favorite>\n          <S.Icon src={heart} />\n        </S.FavoritesButton>\n        <S.AddButton onClick={() => handleAddProduct()}>\n          Add to cart\n        </S.AddButton>\n      </S.CardFooter>\n    </S.Card>\n  );\n};\nProductCard.propTypes = {\n  addProductToCart: PropTypes.func.isRequired,\n  product: PropTypes.object.isRequired,\n  shoppingCart: PropTypes.array.isRequired,\n  updateProductInCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({shoppingCart}) => ({\n  shoppingCart,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addProductToCart: product => dispatch(addToCart(product)),\n  updateProductInCart: product => dispatch(updateCart(product)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);\n","import styled from 'styled-components';\n\nexport const ProductList = styled.div`\n  width: 100%;\n  float: left;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 30px;\n  row-gap: 30px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from '../ProductCard/ProductCard';\nimport productsData from '../../data/products.json';\nimport * as S from './productList.styled';\n\nconst ProductList = ({products}) => {\n  return (\n    <S.ProductList>\n      {products.map(product => (\n        <ProductCard key={product.id} product={product}></ProductCard>\n      ))}\n    </S.ProductList>\n  );\n};\n\nProductList.defaultProps = {\n  products: productsData,\n};\n\nProductList.propTypes = {\n  products: PropTypes.array,\n};\n\nexport default ProductList;\n","import {\n  ADD_TO_CART,\n  UPDATE_CART,\n  REMOVE_FROM_CART,\n} from '../constants/actionTypes';\nimport {updateShoppingCart} from '../../shared/utils';\n\nconst initialState = [];\n\nconst shoppingCart = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return [...state, {...action.payload}];\n\n    case UPDATE_CART: {\n      return updateShoppingCart(action.payload, state);\n    }\n\n    case REMOVE_FROM_CART:\n      return state.filter(product => product.id !== action.id);\n    default:\n      return state;\n  }\n};\n\nexport default shoppingCart;\n","import {combineReducers} from 'redux';\nimport shoppingCart from './shoppingCart';\n\nconst rootReducer = combineReducers({\n  shoppingCart,\n});\n\nexport default rootReducer;\n","import styled from 'styled-components';\n\nexport const ProductCard = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 5px;\n  float: left;\n  background-color: #ffff;\n  margin-bottom: 30px;\n  border-bottom: 1px solid #d0d0d0;\n`;\n\nexport const ProductImage = styled.div`\n  height: 100%;\n  width: 100px;\n  float: left;\n  background-color: #fff;\n  padding: 15px;\n  img {\n    height: 100%;\n    width: 100%;\n    float: left;\n    object-fit: contain;\n  }\n`;\n\nexport const ProductTitle = styled.div`\n  width: calc(100% - 100px);\n  padding: 15px 15px 0 15px;\n  float: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nexport const ProductPrice = styled.div`\n  width: calc(100% - 100px);\n  padding: 0 15px;\n  float: left;\n  color: #333;\n`;\n\nexport const ProductQuantity = styled.div`\n  color: #333;\n  width: calc(100% - 100px);\n  padding: 0 15px;\n  float: left;\n  flex: 1;\n`;\n\nexport const ChangeQuantityButton = styled.button`\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\n\nexport const RemoveProduct = styled.div`\n  flex: 1;\n  width: calc(100% - 100px);\n  padding: 0 15px;\n  text-align: right;\n  float: right;\n  margin-top: -25px;\n  color: #333;\n  font-family: 'Open Sans', sans-serif;\n`;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {removeFromCart, updateCart} from '../../../store/actions';\nimport {checkQuantity} from '../../../shared/utils';\nimport * as S from './cartProductCard.styled';\n\nconst CartProductCard = ({\n  removeProductFromCart,\n  product,\n  quantity,\n  shoppingCart,\n  updateProductInCart,\n}) => {\n  const handleUpdateQuantity = type => {\n    if (type === 'remove' && quantity === 1) {\n      removeProductFromCart(product.id);\n      return;\n    }\n    const updatedProduct = checkQuantity(product, shoppingCart, type);\n    updateProductInCart(updatedProduct);\n  };\n\n  return (\n    <S.ProductCard>\n      <S.ProductImage>\n        <img src={product.image} alt=\"\" />\n      </S.ProductImage>\n      <S.ProductTitle>{product.title}</S.ProductTitle>\n      <S.ProductPrice>€ {product.price}</S.ProductPrice>\n      <S.ProductQuantity>\n        <S.ChangeQuantityButton onClick={() => handleUpdateQuantity('remove')}>\n          -\n        </S.ChangeQuantityButton>\n        {''} {quantity}\n        {''}{' '}\n        <S.ChangeQuantityButton onClick={() => handleUpdateQuantity()}>\n          +\n        </S.ChangeQuantityButton>\n      </S.ProductQuantity>\n      <S.RemoveProduct onClick={() => removeProductFromCart(product.id)}>\n        Remove\n      </S.RemoveProduct>\n    </S.ProductCard>\n  );\n};\n\nCartProductCard.propTypes = {\n  product: PropTypes.object.isRequired,\n  removeProductFromCart: PropTypes.func.isRequired,\n  quantity: PropTypes.number.isRequired,\n  shoppingCart: PropTypes.array.isRequired,\n  updateProductInCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({shoppingCart}) => ({\n  shoppingCart,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeProductFromCart: id => dispatch(removeFromCart(id)),\n  updateProductInCart: product => dispatch(updateCart(product)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartProductCard);\n","import styled from 'styled-components';\n\nexport const Button = styled.div`\n  min-width: ${({isSmall}) => (isSmall ? '150px' : '300px')};\n  max-width: ${({isSmall}) => (isSmall ? '163px' : '343px')};\n\n  height: 48px;\n  font-family: 'Open Sans', sans-serif;\n  font-size: 14px;\n  text-align: center;\n  line-height: 48px;\n  border: 1px solid #dce2e5;\n  border-radius: 5px;\n  background: #ffffff;\n  cursor: pointer;\n  color: #000;\n  text-decoration: none;\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './button.styled';\n\nconst Button = ({isSmall, children}) => (\n  <S.Button isSmall={isSmall}>{children}</S.Button>\n);\n\nButton.defaultProps = {\n  isSmall: false,\n};\n\nButton.propTypes = {\n  isSmall: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const ProductsContainer = styled.div`\n  width: 400px;\n  position: fixed;\n  right: 0;\n  top: 0;\n  background: #fff;\n  opacity: 1;\n  height: 100vh;\n\n  border: 1px solid #333;\n  z-index: 99;\n  cursor: pointer;\n`;\n\nexport const ProductsSubcontainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const BackButtonContainer = styled.div`\n  height: 60px;\n  position: absolute;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  border-bottom: 1px solid #d0d0d0;\n  float: left;\n  top: 0;\n  left: 0;\n  background-color: #fff;\n  cursor: pointer;\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`;\n\nexport const ItemsContainer = styled.div`\n  overflow-y: auto;\n  padding: 100px 40px 40px 40px;\n`;\n\nexport const BackButton = styled.div`\n  vertical-align: middle;\n  line-height: 60px;\n`;\n\nexport const BackButtonText = styled.div`\n  font-family: 'Open Sans', sans-serif;\n  line-height: 60px;\n  font-size: 15px;\n  color: #333;\n  margin-left: 10px;\n`;\n\nexport const Icon = styled.img`\n  height: 20px;\n  width: 20px;\n  margin: 20px 0 0 10px;\n`;\n\nexport const BottomContainer = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  width: 100%;\n  border-top: 1px solid #d0d0d0;\n  bottom: 0;\n  left: 0;\n  z-index: 9999;\n  background-color: #fff;\n`;\n\nexport const TotalPriceContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const TotalPriceText = styled.div`\n  font-family: 'Open Sans', sans-serif;\n  font-weight: 300;\n  font-size: 18px;\n  color: #333;\n  margin-top: 20px;\n  margin-left: 20px;\n  padding-bottom: 30px;\n`;\n\nexport const TotalPriceNumber = styled.div`\n  font-family: 'Open Sans', sans-serif;\n  font-weight: 300;\n  font-size: 18px;\n  color: #333;\n  margin-top: 20px;\n  margin-right: 20px;\n  padding-bottom: 30px;\n`;\n\nexport const CheckoutButtonContainer = styled.div`\n  margin: 0 auto 20px auto;\n`;\n\nexport const IfCartEmpty = styled.div`\n  font-family: 'Open Sans', sans-serif;\n  font-size: 20px;\n  line-height: 30px;\n  color: #d0d0d0;\n  margin: 20px 0 0 20px;\n`;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {showTotalAmount} from '../../shared/utils';\nimport CartProductCard from '../SlideShoppingCart/CartProductCard/CartProductCard';\nimport leftArow from '../../assets/icons/leftArow.svg';\nimport Button from '../Button/Button';\nimport * as S from './slideShoppingCart.styled';\n\nconst SlideShoppingCart = ({shoppingCart, closeCart}) => {\n  return (\n    <S.ProductsContainer>\n      <S.ProductsSubcontainer>\n        <S.BackButtonContainer onClick={closeCart}>\n          <S.Icon src={leftArow}></S.Icon>\n          <S.BackButtonText>CONTINUE SHOPPING</S.BackButtonText>\n        </S.BackButtonContainer>\n        <S.ItemsContainer>\n          {shoppingCart.length === 0 ? (\n            <S.IfCartEmpty>Your cart is currently empty.</S.IfCartEmpty>\n          ) : (\n            shoppingCart.map(product => (\n              <CartProductCard\n                key={product.id}\n                product={product}\n                quantity={product.quantity}\n              />\n            ))\n          )}\n        </S.ItemsContainer>\n        <S.BottomContainer>\n          <S.TotalPriceContainer>\n            <S.TotalPriceText>Subtotal:</S.TotalPriceText>\n            <S.TotalPriceNumber>\n              <strong>{showTotalAmount(shoppingCart)}</strong>\n            </S.TotalPriceNumber>\n          </S.TotalPriceContainer>\n          <S.CheckoutButtonContainer>\n            <Button isSmall>CHECK OUT</Button>\n          </S.CheckoutButtonContainer>\n        </S.BottomContainer>\n      </S.ProductsSubcontainer>\n    </S.ProductsContainer>\n  );\n};\nSlideShoppingCart.propTypes = {\n  shoppingCart: PropTypes.array.isRequired,\n  closeCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({shoppingCart}) => ({\n  shoppingCart,\n});\n\nexport default connect(mapStateToProps)(SlideShoppingCart);\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  width: 100%;\n  position: fixed;\n  height: 90px;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  background-color: #000;\n`;\n\nexport const LogoContainer = styled.div`\n  float: left;\n  margin-left: 30px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n`;\n\nexport const LogoText = styled.div`\n  color: #fff;\n  h2 {\n    font-family: 'PT Sans Narrow', sans-serif;\n    font-weight: 600;\n    font-size: 30px;\n  }\n`;\n\nexport const Logo = styled.div`\n  margin-top: 22px;\n`;\n\nexport const LogoIcon = styled.img`\n  width: 30px;\n  height: 30px;\n  margin-right: -15px;\n`;\n\nexport const ItemsCountBubble = styled.header`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  z-index: 2;\n  background-color: #fff;\n  border-radius: 50%;\n  border: 2px solid #333;\n  font-family: 'Open Sans', sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 10px;\n  top: 20px;\n  left: 58px;\n  transition: all 0.2s linear;\n`;\n\nexport const ShoppingCartButton = styled.div`\n  width: 90px;\n  height: 100%;\n  position: absolute;\n  right: 0;\n  top: 0;\n  background-color: #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  svg {\n    width: 30px;\n    height: 30px;\n    path {\n      fill: white;\n      transition: all 0.2s linear;\n    }\n  }\n\n  &:hover {\n    background-color: #fff;\n    border: 1px solid #000;\n    svg {\n      path {\n        fill: #333;\n      }\n    }\n    ${ItemsCountBubble} {\n      background-color: #333;\n      border: 2px solid #ffffff;\n      font-family: 'Open Sans', sans-serif;\n      color: #ffffff;\n    }\n  }\n`;\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SlideShoppingCart from '../SlideShoppingCart/SlideShoppingCart';\nimport {calculateCartProductQuantity} from '../../shared/utils';\nimport corner from '../../assets/icons/corner.svg';\nimport * as S from './header.styled';\n\nconst Header = ({shoppingCart}) => {\n  const [openSlideCart, setOpenSlideCart] = useState(false);\n\n  const handleCloseCart = () => {\n    setOpenSlideCart(false);\n  };\n\n  const handleOpenCart = () => {\n    setOpenSlideCart(true);\n  };\n\n  return (\n    <S.Header>\n      <S.LogoContainer>\n        <S.Logo>\n          <S.LogoIcon src={corner} />\n        </S.Logo>\n        <S.LogoText>\n          <h2> The Corner Shop</h2>\n        </S.LogoText>\n      </S.LogoContainer>\n      {openSlideCart && <SlideShoppingCart closeCart={handleCloseCart} />}\n      <S.ShoppingCartButton onClick={handleOpenCart}>\n        <svg\n          x=\"0px\"\n          y=\"0px\"\n          width=\"446.853px\"\n          height=\"446.853px\"\n          viewBox=\"0 0 446.853 446.853\"\n        >\n          <g>\n            <path\n              d=\"M444.274,93.36c-2.558-3.666-6.674-5.932-11.145-6.123L155.942,75.289c-7.953-0.348-14.599,5.792-14.939,13.708\n\t\t\tc-0.338,7.913,5.792,14.599,13.707,14.939l258.421,11.14L362.32,273.61H136.205L95.354,51.179\n\t\t\tc-0.898-4.875-4.245-8.942-8.861-10.753L19.586,14.141c-7.374-2.887-15.695,0.735-18.591,8.1c-2.891,7.369,0.73,15.695,8.1,18.591\n\t\t\tl59.491,23.371l41.572,226.335c1.253,6.804,7.183,11.746,14.104,11.746h6.896l-15.747,43.74c-1.318,3.664-0.775,7.733,1.468,10.916\n\t\t\tc2.24,3.184,5.883,5.078,9.772,5.078h11.045c-6.844,7.617-11.045,17.646-11.045,28.675c0,23.718,19.299,43.012,43.012,43.012\n\t\t\ts43.012-19.294,43.012-43.012c0-11.028-4.201-21.058-11.044-28.675h93.777c-6.847,7.617-11.047,17.646-11.047,28.675\n\t\t\tc0,23.718,19.294,43.012,43.012,43.012c23.719,0,43.012-19.294,43.012-43.012c0-11.028-4.2-21.058-11.042-28.675h13.432\n\t\t\tc6.6,0,11.948-5.349,11.948-11.947c0-6.6-5.349-11.948-11.948-11.948H143.651l12.902-35.843h216.221\n\t\t\tc6.235,0,11.752-4.028,13.651-9.96l59.739-186.387C447.536,101.679,446.832,97.028,444.274,93.36z M169.664,409.814\n\t\t\tc-10.543,0-19.117-8.573-19.117-19.116s8.574-19.117,19.117-19.117s19.116,8.574,19.116,19.117S180.207,409.814,169.664,409.814z\n\t\t\tM327.373,409.814c-10.543,0-19.116-8.573-19.116-19.116s8.573-19.117,19.116-19.117s19.116,8.574,19.116,19.117\n\t\t\tS337.916,409.814,327.373,409.814z\"\n            />\n          </g>\n        </svg>\n        <S.ItemsCountBubble>\n          {calculateCartProductQuantity(shoppingCart)}\n        </S.ItemsCountBubble>\n      </S.ShoppingCartButton>\n    </S.Header>\n  );\n};\n\nHeader.defaultProps = {\n  shoppingCart: 0,\n};\n\nHeader.propTypes = {\n  shoppingCart: PropTypes.array,\n};\n\nconst mapStateToProps = ({shoppingCart}) => ({\n  shoppingCart,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import styled from 'styled-components';\n\nexport const MainWrapper = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n`;\n\nexport const ContentWrapper = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  padding-top: 200px;\n`;\n\nexport const ContentCard = styled.div`\n  width: 100%;\n  box-shadow: 0 1px 8px 0 rgba(0, 0, 0, 0.3);\n  background-color: #ffffff;\n  padding: 15px;\n  float: left;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport * as S from './layout.styled';\n\nconst Layout = ({children}) => (\n  <S.MainWrapper>\n    <Header />\n    <S.ContentWrapper>{children}</S.ContentWrapper>\n  </S.MainWrapper>\n);\n\nLayout.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WebFont from 'webfontloader';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport ProductList from '../src/components/ProductList/ProductList';\nimport reducer from './store/reducers';\nimport Layout from './components/Layout/Layout';\nimport 'sanitize.css';\nimport './assets/styles/global.css';\n\nWebFont.load({\n  google: {\n    families: ['Jaldi:300,400,400i,600,700,700i&display=optional'],\n  },\n});\n\nconst store = createStore(reducer);\n\nconst appRoot = (\n  <Provider store={store}>\n    <Layout>\n      <ProductList />\n    </Layout>\n  </Provider>\n);\n\nReactDOM.render(appRoot, document.getElementById('root'));\n"],"sourceRoot":""}